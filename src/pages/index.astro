---
import HeroBanner from "../components/HeroBanner.astro";
import type { ProjectFrontmatter } from "../helpers/projectHelpers";
import AppLayout from "../layouts/AppLayout.astro";

const projects = (await Astro.glob<ProjectFrontmatter>("./projects/*.mdx"))
  .filter((project) => !project.frontmatter.draft)
  .sort((a, b) => b.file.localeCompare(a.file));

const projectLinkDimension = "var(--sizing-12)";
---

<AppLayout>
  <HeroBanner subtitle="Game Designer" />

  <div
    class="content-container-outer flexbox-vertical with-responsive-padding-inline"
  >
    <div class="content-container-inner flexbox-vertical">
      <p class="text">
        Hello! My name’s Anna. I’m a video game designer based in the Bay Area,
        California. I’m passionate about making games that use compelling
        mechanics to tell unexpected or emotionally resonant stories.
      </p>

      <p class="text">
        My strengths as a game designer lie in my systems and level design
        skills and in my experience across many diverse aspects of game
        creation—from writing, art, and audio to programming, modeling, and
        animation. I enjoy communicating and collaborating with engineers as
        well as with artists and other designers.
      </p>
    </div>

    <div class="content-container-inner flexbox-vertical">
      <h1 class="heading">Skills</h1>

      <ul class="skills-list list-without-bullets">
        <li>
          <span class="skills-list-category">Software</span>

          <ul class="skills-sublist flexbox-vertical">
            <li>Unreal Engine 5</li>
            <li>Maya</li>
          </ul>
        </li>

        <li>
          <span class="skills-list-category">Programming Languages</span>

          <ul class="skills-sublist flexbox-vertical">
            <li>C++</li>
            <li>Unreal Engine Blueprint</li>
            <li>JavaScript / TypeScript</li>
            <li>HTML / CSS</li>
            <li>SQL</li>
          </ul>
        </li>
      </ul>
    </div>

    <div class="content-container-inner flexbox-vertical">
      <h1 class="heading">Projects</h1>

      <ul class="list-without-bullets projects-list">
        {
          projects.map((project) => (
            <li>
              <a class="flexbox-vertical project-link" href={project.url}>
                <span class="project-link-title">
                  {project.frontmatter.title}
                </span>

                <span class="project-link-blurb">
                  {project.frontmatter.blurb}
                </span>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </div>

  <style define:vars={{ projectLinkDimension }}>
    .content-container-inner {
      gap: var(--spacing-7);
    }

    .content-container-outer {
      align-items: center;
      gap: var(--spacing-9);
      padding-block: var(--spacing-7);
    }

    .heading {
      text-align: center;
    }

    .project-link {
      background-color: var(--color-neutral-1);
      border-radius: var(--border-radius-1);
      color: var(--color-neutral-9);
      height: var(--projectLinkDimension);
      justify-content: space-between;
      padding: var(--spacing-4);
      text-decoration: none;
      transition: background-color var(--transition-duration-3);
      width: var(--projectLinkDimension);
    }

    .project-link:hover {
      background-color: var(--color-neutral-2);
    }

    .project-link-blurb {
      font-size: var(--font-size-2);
    }

    .project-link-label {
      font-weight: var(--font-weight-2);
    }

    .project-link-title {
      font-size: var(--font-size-5);
    }

    .projects-list {
      flex-direction: row;
      flex-wrap: wrap;
      gap: var(--spacing-7);
      justify-content: center;
    }

    .skills-list {
      gap: var(--spacing-6);
    }

    .skills-list-category {
      display: block;
      font-size: var(--font-size-3);
      font-weight: var(--font-weight-2);
      margin-block-end: var(--spacing-1);
    }

    .skills-sublist {
      gap: var(--spacing-1);
    }

    .text {
      font-size: var(--font-size-3);
      line-height: 1.6;
    }

    .text-link {
      font-weight: var(--font-weight-1);
    }

    @media (min-width: 768px) {
      .content-container-inner {
        max-inline-size: var(--sizing-16);
      }
    }
  </style>
</AppLayout>
